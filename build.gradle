//noinspection GradleDependency
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
def versionPropsFile = file('version.properties')
Properties versionProps = new Properties()
if (versionPropsFile.canRead()) {
    versionProps.load(new FileInputStream(versionPropsFile))
}
def vCode = versionProps['VERSION_CODE'].toInteger()
def vName = versionProps['VERSION_NAME']
android {
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    signingConfigs {
        config {
            keyAlias 'dan'
            keyPassword '123456789'
            storePassword '123456789'
            storeFile file('dan_debug_key')
        }
        config_release {
            keyAlias 'dan'
            keyPassword '123456789'
            storePassword '123456789'
            storeFile file('dan_debug_key')
        }
    }
    defaultConfig {
        applicationId "com.dan.mtest"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode vCode
        versionName vName
        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField('String', 'FULL_VERSION_NAME', "\"$versionName.$versionCode\"")
        resValue 'string', 'application_id', applicationId
        multiDexEnabled true
        ndk { abiFilters "armeabi", "armeabi-v7a", "x86", "mips" }
    }
    repositories {
        flatDir {
            dir 'libs'
        }
    }
    configurations {
        all*.exclude group: 'xpp3', module: 'xpp3'
    }
    flavorDimensions 'default'
    productFlavors {
        global {
            dimension = 'default'
            buildConfigField "String", "API_DOMAIN", '"https://api.dt.dmateer.com"'
            buildConfigField "boolean", "IS_CHINA_FLAVOR", "false"
        }
        china {
            dimension = 'default'
            buildConfigField "String", "API_DOMAIN", '"https://api-dt.dmateer.cn"'
            buildConfigField "boolean", "IS_CHINA_FLAVOR", "true"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.config_release
            manifestPlaceholders = [enableCrashReporting: "true"]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.config
            manifestPlaceholders = [enableCrashReporting: "false"]
        }
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    packagingOptions {
        exclude 'builddef.lst'
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
kapt {
    javacOptions {
        // Increase the max count of errors from annotation processors.
        // Default is 100.
        option("-Xmaxerrs", 500000)
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Android Support Library dependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.android.support:support-dynamic-animation:28.0.0'
    implementation 'com.android.support:exifinterface:28.0.0'
    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.6.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    // RxJava / RxAndroid
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    // Dagger 2
    implementation 'com.google.dagger:dagger:2.17'
    implementation 'com.google.dagger:dagger-android:2.17'
    implementation 'com.google.dagger:dagger-android-support:2.17'
    kapt "com.google.dagger:dagger-compiler:2.17"
    kapt "com.google.dagger:dagger-android-processor:2.17"
    kapt 'com.squareup.inject:assisted-inject-processor-dagger2:0.3.2'
    compileOnly 'javax.annotation:jsr250-api:1.0'
    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.3.2'
    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams-ktx:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    // Room SQLite for data persistence
    implementation 'androidx.room:room-runtime:2.1.0'
    kapt "androidx.room:room-compiler:2.1.0"
    implementation 'androidx.room:room-rxjava2:2.1.0'
    // Paging
    implementation 'androidx.paging:paging-runtime-ktx:2.1.0'
    implementation 'androidx.paging:paging-rxjava2-ktx:2.1.0'
    // Worker Manager
    implementation 'androidx.work:work-runtime-ktx:2.1.0'
    implementation 'androidx.work:work-rxjava2:2.1.0'
    // Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    implementation('com.github.bumptech.glide:okhttp3-integration:4.9.0') {
        exclude group: 'glide-parent'
    }
    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'
    // RXPermissions
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    //easy permissions
    implementation 'com.github.xinyuez:easypermissions:2.0.1'
    //RxPreference
    implementation 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0'
    //google maps
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    //multidex for api <21
    implementation 'androidx.multidex:multidex:2.0.1'
    //apache common
    implementation 'commons-io:commons-io:2.4'
    implementation 'commons-net:commons-net:3.6'
    // misc
    implementation 'com.evernote:android-state:1.4.1'
    kapt 'com.evernote:android-state-processor:1.4.1'
    //google map
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    //video compressor
    implementation 'com.iceteck.silicompressorr:silicompressor:2.2.1'
    //Custom File Uploader Downloader
    implementation "androidx.tonyodev.fetch2:xfetch2:3.1.3"
    implementation 'com.mindorks.android:prdownloader:0.5.0'
    implementation 'net.gotev:uploadservice:3.5.2'
    //implementation "net.gotev:uploadservice-okhttp:3.5.2"
    //Custom View
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.hmomeni.progresscircula:progresscircula:0.1.3'
    implementation 'com.github.scottyab:showhidepasswordedittext:0.8'
    implementation 'com.otaliastudios:cameraview:2.0.0-beta04'
    implementation 'com.wonderkiln:camerakit:0.13.5'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.github.ome450901:SimpleRatingBar:1.4.2'
    implementation 'com.jakewharton:process-phoenix:2.0.0'
    implementation 'com.airbnb.android:lottie:3.0.1'
    implementation 'com.hbb20:ccp:2.2.9'
    implementation 'com.google.firebase:firebase-core:17.0.1'
    implementation 'com.google.firebase:firebase-messaging:19.0.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.firebase:firebase-dynamic-links:18.0.0'
    implementation 'com.facebook.shimmer:shimmer:0.4.0'
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'
    //SMACK XMPP library
    implementation 'org.igniterealtime.smack:smack-android-extensions:4.3.2'
    implementation 'org.igniterealtime.smack:smack-experimental:4.3.2'
    implementation 'org.igniterealtime.smack:smack-tcp:4.3.2'
    implementation 'org.webrtc:google-webrtc:1.0.28262'
    implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'
    implementation 'com.airbnb:deeplinkdispatch:4.1.0'
    kapt 'com.airbnb:deeplinkdispatch-processor:4.1.0'
    implementation 'joda-time:joda-time:2.9.9'
    implementation 'com.github.instacart.truetime-android:library:3.4'
    implementation 'com.github.instacart.truetime-android:library-extension-rx:3.4'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:5.4.0'
    implementation 'com.pingxx:pingpp-android:2.2.2'
    implementation "ru.tinkoff.scrollingpagerindicator:scrollingpagerindicator:1.0.6"
    implementation 'androidx.tonyodev.fetch2:xfetch2:3.1.3'
    implementation(name: 'alipaySdk-15.6.4-20190611174359-noUtdid', ext: 'aar')
    // Unit test dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.squareup.okhttp:mockwebserver:2.7.5'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC1'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation "org.mockito:mockito-core:3.0.0"
    testImplementation 'com.google.dagger:dagger:2.17'
    testImplementation 'org.json:json:20180130'
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.17'
    kaptTest 'com.google.dagger:dagger-compiler:2.17'
    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.42'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
    androidTestImplementation 'com.google.dagger:dagger:2.17'
    androidTestAnnotationProcessor 'com.google.dagger:dagger-compiler:2.17'
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.17'
}
apply plugin: 'com.google.gms.google-services'
